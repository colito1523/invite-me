import React, { useRef, useState, useEffect } from 'react';
import { View, TouchableOpacity, Text, StyleSheet } from 'react-native';
import { Camera } from 'expo-camera'; // Correct import

export default function CustomCamera({ onCapture }) {
  const [hasPermission, setHasPermission] = useState(null);
  const cameraRef = useRef(null);

  useEffect(() => {
    (async () => {
      const { status } = await Camera.requestCameraPermissionsAsync();
      setHasPermission(status === 'granted');
    })();
  }, []);

  const takePhoto = async () => {
    if (cameraRef.current) {
      const photo = await cameraRef.current.takePictureAsync({
        quality: 1, // High quality
        skipProcessing: true, // Avoid additional processing
      });
      onCapture(photo.uri);
    }
  };

  if (hasPermission === null) {
    return <Text>Solicitando acceso a la cámara...</Text>;
  }
  if (hasPermission === false) {
    return <Text>No se otorgaron permisos para la cámara.</Text>;
  }

  return (
    <View style={styles.container}>
      <Camera style={styles.camera} ref={cameraRef} />
      <TouchableOpacity style={styles.captureButton} onPress={takePhoto}>
        <Text style={styles.buttonText}>Tomar Foto</Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1 },
  camera: { flex: 1 },
  captureButton: {
    position: 'absolute',
    bottom: 50,
    left: '50%',
    transform: [{ translateX: -50 }],
    backgroundColor: '#fff',
    padding: 15,
    borderRadius: 50,
  },
  buttonText: { color: '#000', fontSize: 16 },
});
