rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la colección /users
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || 
        request.auth.uid in resource.data.blockedUsers || 
        request.auth.uid in request.resource.data.blockedUsers);

      // Subcolecciones existentes...
      match /events/{eventId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      match /friends/{friendId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
      }

      match /likes/{likeId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow delete: if request.auth != null && (
          request.auth.uid == userId ||         // Dueño del perfil
          request.auth.uid == resource.data.userId // Usuario que dio el like
        );
        allow write: if request.auth != null && (
          request.auth.uid == userId ||         // Dueño del perfil
          request.auth.uid == resource.data.userId // Usuario que dio el like
        );
      }

      match /friendRequests/{requestId} {
        allow read: if request.auth != null && (
          request.auth.uid == userId ||              // Destinatario
          request.auth.uid == resource.data.fromId  // Remitente
        );
        allow create: if request.auth != null;
        allow write: if request.auth != null && (
          request.auth.uid == userId ||              // Destinatario
          request.auth.uid == resource.data.fromId   // Remitente
        );
      }

      match /note/{noteId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
        match /likes/{likeId} {
          allow read: if request.auth != null;
          allow create: if request.auth != null;
          allow delete: if request.auth != null && (
            request.auth.uid == userId ||              // Dueño de la nota
            request.auth.uid == resource.data.userId   // Usuario que dio el like
          );
          allow write: if request.auth != null && (
            request.auth.uid == userId ||              // Dueño de la nota
            request.auth.uid == resource.data.userId   // Usuario que dio el like
          );
        }
      }

      match /stories/{storyId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }

      match /notifications/{notificationId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null;
      }

      match /blockedUsers/{blockedUserId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && (
          request.auth.uid == userId ||  // Dueño del perfil puede bloquear/desbloquear
          request.auth.uid == blockedUserId  // Usuario bloqueado puede ver su estado
        );
      }
    }

    // Nueva regla para GoBoxs
    match /GoBoxs/{boxId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }

    // Regla para EventsPriv
    match /EventsPriv/{eventId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    match /complaints/{complaintId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }
  }
}